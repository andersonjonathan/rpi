# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-13 22:38
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Plug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(choices=[(b'a', b'Auto'), (b'1', b'On'), (b'0', b'Off')], default=b'0', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='RadioProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('time', models.IntegerField(help_text=b'Period time t in seconds')),
            ],
        ),
        migrations.CreateModel(
            name='RadioSignal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('char', models.CharField(max_length=1)),
                ('on', models.IntegerField(help_text=b'Nr of periods on')),
                ('off', models.IntegerField(help_text=b'Nr of periods off')),
                ('protocol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.RadioProtocol')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_mode', models.CharField(choices=[(b't', b'Time'), (b'u', b'Sun up'), (b'd', b'Sun down')], default=b't', max_length=1)),
                ('start', models.TimeField(blank=True, null=True)),
                ('end_mode', models.CharField(choices=[(b't', b'Time'), (b'u', b'Sun up'), (b'd', b'Sun down')], default=b't', max_length=1)),
                ('end', models.TimeField(blank=True, null=True)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Schedule')),
            ],
        ),
        migrations.CreateModel(
            name='RadioPlug',
            fields=[
                ('plug_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='application.Plug')),
                ('payload_on', models.CharField(max_length=255)),
                ('payload_off', models.CharField(max_length=255)),
                ('protocol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.RadioProtocol')),
            ],
            bases=('application.plug',),
        ),
        migrations.CreateModel(
            name='WiredPlug',
            fields=[
                ('plug_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='application.Plug')),
                ('gpio', models.IntegerField(help_text=b'GPIO port', unique=True)),
                ('invert_gpio', models.BooleanField(help_text=b'Set to true if 1 turns off the plug and 0 turns it on.')),
            ],
            bases=('application.plug',),
        ),
        migrations.AddField(
            model_name='plug',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Schedule'),
        ),
        migrations.AlterUniqueTogether(
            name='radiosignal',
            unique_together=set([('protocol', 'char')]),
        ),
    ]
